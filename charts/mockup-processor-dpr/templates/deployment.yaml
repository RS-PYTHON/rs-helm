kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  generation: 1
  labels:
    app: {{ .Release.Name }}
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ .Release.Name }}
        type: {{ .Values.namespace }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.PullPolicy }}
        resources:
          requests:
            memory: {{ .Values.resources.request.ram }}
            cpu: {{ .Values.resources.request.cpu }}
          limits:
            memory: {{ .Values.resources.limit.ram }}
            cpu: {{ .Values.resources.limit.cpu }}
        ports:
        - name: web
          protocol: TCP
          containerPort: {{ .Values.app.port }}
        env:
        - name: S3_ENDPOINT
          value: {{ .Values.obs.endpoint }}
        - name: S3_REGION
          value: {{ .Values.obs.region }}
        - name: S3_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-obs
              key: ak
        - name: S3_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-obs
              key: sk
        securityContext:
          privileged: false
      #imagePullSecrets:
      #- name:  {{ .Values.image.imagePullSecrets }}
      restartPolicy: Always
      securityContext: {}
  revisionHistoryLimit: 10