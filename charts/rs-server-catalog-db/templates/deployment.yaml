kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  generation: 1
  labels:
    app: {{ .Release.Name }}
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ .Release.Name }}
        type: {{ .Values.namespace }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.PullPolicy }}
        resources:
          requests:
            memory: {{ .Values.resources.request.ram }}
            cpu: {{ .Values.resources.request.cpu }}
          limits:
            memory: {{ .Values.resources.limit.ram }}
            cpu: {{ .Values.resources.limit.cpu }}
        ports:
        - name: web
          protocol: TCP
          containerPort: 5432
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: pgstac-pgdata
        env:
        - name: POSTGRES_PORT
          value: {{ .Values.postgres.port | quote }}
        - name: POSTGRES_DB
          value: {{ .Values.postgres.db }}
        - name: POSTGRES_HOST
          value: {{ .Values.postgres.host }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: PGDATABASE
          value: {{ .Values.postgres.db }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: pass        
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: user
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: pass
        securityContext:
          privileged: false
      restartPolicy: Always
      securityContext: {}
      volumes:
        - name: pgstac-pgdata
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
            readOnly: false
  revisionHistoryLimit: 10