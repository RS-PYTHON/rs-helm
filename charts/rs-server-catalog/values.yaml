# Copyright 2024 CS Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -- Namespace for the deployment
namespace: processing

# -- Number of replicas for the deployment
replicaCount: 1

service:
  # -- Port for the service
  port: 8080

app:
  # -- Port for the application
  port: 8000
  # -- URL of the API Key Manager service
  uacURL: http://apikeymanager.processing.svc.cluster.local:8000/check/api_key
  # -- URL of the API Key Manager home page (public)
  uacHomeUrl: https://apikeymanager.subdomain.example.com/docs
  # -- Object Storage bucket for the catalog
  catalogBucket: rs-cluster-catalog
  # -- Presigned URL expiration time in seconds. 30 min by default
  presignedUrlExpirationTime: 1800  
  metadata:
    # -- update the catalog metadata id parameter over the default one received from the pystac client
    id: "rs-python"
    # -- update the catalog metadata title parameter over the default one received from the pystac client
    title: "RS-PYTHON STAC Catalog"
    # -- update the catalog metadata description parameter over the default one received from the pystac client
    description: "STAC catalog of Copernicus Reference System Python"

obs:
  # -- URL of the object storage service endpoint
  endpoint: http://minio.minio.svc.cluster.local:9000
  # -- Region of the object storage service
  region: sbg
  secret:
    # -- Access Key to authenticate with the object storage service
    ak: TDr8foJqSygBQ9YFmWDy
    # -- Secret Key to authenticate with the object storage service
    sk: z2RaqjFttnVZRTsLLqmy4PE6PzJOKzPsE47alDBs

auth:
  secret:
    # -- OIDC End Point
    oidc_endpoint: ""
    # -- OIDC Realm
    oidc_realm: ""
    # -- OIDC CLient ID
    oidc_client_id: ""
    # -- OIDC Secret used to sync user info from Keycloak
    oidc_client_secret: ""
    # -- Random string used to encode cookie-based HTTP sessions in SessionMiddleware
    cookie_secret: ""

postgres:
  # -- PostgreSQL port
  port: "5432"
  # -- PostgreSQL database name
  db: catalog
  host:
    # -- PostgreSQL service URL for Read Write
    rw: rs-server-catalog-db-svc.database.svc.cluster.local
    # -- PostgreSQL service URL for Read Only
    ro: rs-server-catalog-db-svc.database.svc.cluster.local
  secret:
    # -- Username to authenticate with the PostgreSQL service
    user: postgres
    # -- Password to authenticate with the PostgreSQL service
    pass: password

image:
  # -- Image registry
  registry: ghcr.io
  # -- Image repository
  repository: rs-python
  # -- Image name
  name: rs-server-catalog
  # -- Image version, can be a tag or a digest
  version: 0.2a2
  # -- Image pull policy
  PullPolicy: IfNotPresent
  #imagePullSecrets: regcred

ingress:
  # -- Enabled/Disable ingress
  enabled: true
  issuer:
    # -- Ingress Issuer type
    type: cluster-issuer
    # -- Ingress Issuer name
    name: letsencrypt-prod
  # -- Ingress host name
  host: subdomain.example.com
  # -- Ingress path
  path: /catalog

resources:
  request:
    # -- Pod memory request
    ram: "256Mi"
    # -- Pod CPU request
    cpu: "100m"
  limit:
    # -- Pod memory limit
    ram: "1000Mi"
    # -- Pod CPU limit
    cpu: "500m"

probe:
  liveness:
    # -- Path for the liveness probe
    path: /health
    # -- Port for the liveness probe
    port: 8000
    # -- InitialDelaySeconds for the liveness probe
    initialDelaySeconds: 30
    # -- periodSeconds for the liveness probe
    periodSeconds: 30
    # -- timeoutSeconds for the liveness probe
    timeoutSeconds: 5
  readiness:
    # -- Path for the readiness probe
    path: /health
    # -- Port for the readiness probe
    port: 8000
    # -- InitialDelaySeconds for the readiness probe
    initialDelaySeconds: 30
    # -- periodSeconds for the readiness probe
    periodSeconds: 30
    # -- timeoutSeconds for the readiness probe
    timeoutSeconds: 5

tempo:
  # -- Grafana tempo endpoint.
  endpoint: http://grafana-tempo-distributor.logging.svc.cluster.local:4317