# -- Namespace for the deployment
namespace: processing

# -- Number of replicas for the deployment
replicaCount: 1

service:
  # -- Port for the service
  port: 8080

app:
  # -- Port for the application
  port: 8000
  # -- URL suffix for the application. Must be the same value as ingress.path
  docsUrl: /docs
  # -- URL of the API Key Manager service
  uacURL: http://apikeymanager.processing.svc.cluster.local:8000/check/api_key

probe:
  liveness:
    # -- Path for the liveness probe
    path: /health
    # -- Port for the liveness probe
    port: 8000
    # -- InitialDelaySeconds for the liveness probe
    initialDelaySeconds: 30
    # -- periodSeconds for the liveness probe
    periodSeconds: 30
    # -- timeoutSeconds for the liveness probe
    timeoutSeconds: 5
  readiness:
    # -- Path for the readiness probe
    path: /health
    # -- Port for the readiness probe
    port: 8000
    # -- InitialDelaySeconds for the readiness probe
    initialDelaySeconds: 30
    # -- periodSeconds for the readiness probe
    periodSeconds: 30
    # -- timeoutSeconds for the readiness probe
    timeoutSeconds: 5

image:
  # -- Image registry
  registry: ghcr.io
  # -- Image repository
  repository: rs-python
  # -- Image name
  name: rs-server-frontend
  # -- Image version, can be a tag or a digest
  version: 0.1a8
  # -- Image pull policy
  PullPolicy: IfNotPresent
  #imagePullSecrets: regcred

ingress:
  issuer:
    # -- Ingress Issuer type
    type: cluster-issuer
    # -- Ingress Issuer name
    name: letsencrypt-prod
  # -- Ingress host name
  host: subdomain.example.com
  # -- Ingress path for the application. Must be the same value as app.docsUrl.
  path: /docs

  request:
    # -- Pod memory request
    ram: "256Mi"
    # -- Pod CPU request
    cpu: "100m"
  limit:
    # -- Pod memory limit
    ram: "1000Mi"
    # -- Pod CPU limit
    cpu: "500m"