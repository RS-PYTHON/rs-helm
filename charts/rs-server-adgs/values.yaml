# Copyright 2024 CS Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -- Namespace for the deployment
namespace: processing

# -- Number of replicas for the deployment
replicaCount: 1

service:
  # -- Port for the service
  port: 8080

app:
  # -- Port for the application
  port: 8000
  # -- Working directory for the application
  workDir: /app
  # -- Config directory for the application
  confDir: /app/conf
  # -- Station configuration file for the application
  stationConfigFile: stations_cfg.json
  # -- EODAG configuration file for the application. if useTokenModule is false, eodagConfigFile shall be used
  # -- otherwise adgs_ws_config_token_module.yaml. Set properly the EODAG_ADGS_CONFIG env var
  eodagConfigFile: adgs_ws_config.yaml
  eodagConfigFileTokenModule: adgs_ws_config_token_module.yaml
  # -- The way the token for the external stations is loaded: own module or let eodag to do it (set it to false)
  useTokenModule: false
  station:
    endpoint:
      # -- ADGS URL
      url: http://mockup-station-adgs-svc.processing.svc.cluster.local:8080/Products      
  # -- URL of the API Key Manager service
  uacURL: http://apikeymanager.processing.svc.cluster.local:8000/auth/check_key

probe:
  liveness:
    # -- Path for the liveness probe
    path: /health
    # -- Port for the liveness probe
    port: 8000
    # -- InitialDelaySeconds for the liveness probe
    initialDelaySeconds: 30
    # -- periodSeconds for the liveness probe
    periodSeconds: 30
    # -- timeoutSeconds for the liveness probe
    timeoutSeconds: 5
  readiness:
    # -- Path for the readiness probe
    path: /health
    # -- Port for the readiness probe
    port: 8000
    # -- InitialDelaySeconds for the readiness probe
    initialDelaySeconds: 30
    # -- periodSeconds for the readiness probe
    periodSeconds: 30
    # -- timeoutSeconds for the readiness probe
    timeoutSeconds: 5

# A Kubernetes Affinity, if required. For more information, see [Affinity v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core).
#
# For example:
#   affinity:
#     nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#        - matchExpressions:
#          - key: foo.bar.com/role
#            operator: In
#            values:
#            - master
# Or if empty :
affinity: {}
# affinity:
#   nodeAffinity:
#    requiredDuringSchedulingIgnoredDuringExecution:
#      nodeSelectorTerms:
#      - matchExpressions:
#        - key: role
#          operator: In
#          values:
#          - access_csc

# A list of Kubernetes Tolerations, if required. For more information, see [Toleration v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core).
#
# For example:
#   tolerations:
#   - key: foo.bar.com/role
#     operator: Equal
#     value: master
#     effect: NoSchedule
# Or if empty :
#   tolerations: []
tolerations:
- key: role
  operator: Equal
  value: access_csc
  effect: NoSchedule

postgres:
  # -- PostgreSQL port
  port: "5432"
  # -- PostgreSQL database name
  db: rspydemo
  # -- PostgreSQL service URL
  host: postgresql-cluster-rw.database.svc.cluster.local
  secret:
    # -- Username to authenticate with the PostgreSQL service
    user: test
    # -- Password to authenticate with the PostgreSQL service
    pass: test

obs:
  # -- URL of the object storage service endpoint
  endpoint: http://minio.minio.svc.cluster.local:9000
  # -- Region of the object storage service
  region: sbg
  secret:
    # -- Access Key to authenticate with the object storage service
    ak: TDr8foJqSygBQ9YFmWDy
    # -- Secret Key to authenticate with the object storage service
    sk: z2RaqjFttnVZRTsLLqmy4PE6PzJOKzPsE47alDBs

auth:
  secret:
    # -- OIDC End Point
    oidc_endpoint: ""
    # -- OIDC Realm
    oidc_realm: ""
    # -- OIDC CLient ID
    oidc_client_id: ""
    # -- OIDC Secret used to sync user info from Keycloak
    oidc_client_secret: ""
    # -- Random string used to encode cookie-based HTTP sessions in SessionMiddleware
    cookie_secret: ""

image:
  #imagePullSecrets: regcred
  # -- Image registry
  registry: ghcr.io
  # -- Image repository
  repository: rs-python
  # -- Image name
  name: rs-server-adgs
  # -- Image version, can be a tag or a digest
  version: 0.2a3
  # -- Image pull policy
  PullPolicy: IfNotPresent
  #imagePullSecrets: regcred

ingress:
  # -- Enabled/Disable ingress
  enabled: true
  issuer:
    # -- Ingress Issuer type
    type: cluster-issuer
    # -- Ingress Issuer name
    name: letsencrypt-prod
  # -- Ingress host name
  host: subdomain.example.com
  # -- Ingress path
  path: /adgs

resources:
  request:
    # -- Pod memory request
    ram: "256Mi"
    # -- Pod CPU request
    cpu: "100m"
  limit:
    # -- Pod memory limit
    ram: "1000Mi"
    # -- Pod CPU limit
    cpu: "500m"

tempo:
  # -- Grafana tempo endpoint.
  endpoint: http://grafana-tempo-distributor.logging.svc.cluster.local:4317