# Copyright 2024 CS Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  generation: 1
  labels:
    app: {{ .Release.Name }}
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ .Release.Name }}
        type: {{ .Values.namespace }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: {{ .Release.Name }}
        image: "{{ template "mychart.image" .Values.image }}"
        imagePullPolicy: {{ .Values.image.PullPolicy }}
        resources:
          requests:
            memory: {{ .Values.resources.request.ram }}
            cpu: {{ .Values.resources.request.cpu }}
          limits:
            memory: {{ .Values.resources.limit.ram }}
            cpu: {{ .Values.resources.limit.cpu }}
        volumeMounts:
        - name: workdir
          mountPath: {{ .Values.app.workDir }}
        - name: service-config-volume
          mountPath: {{ .Values.app.confDir }}/{{ .Values.app.eodagConfigFile }}
          subPath: {{ .Values.app.eodagConfigFile }}
        - name: search-service-config-volume
          mountPath: {{ .Values.app.confDir }}/{{ .Values.app.cadipSearchConfigFile }}
          subPath: {{ .Values.app.cadipSearchConfigFile }}
        ports:
        - name: web
          protocol: TCP
          containerPort: {{ .Values.app.port }}
        envFrom:
        - secretRef:
            name: auxip-adgs
        env:
        - name: RSPY_UAC_CHECK_URL
          value: {{ .Values.app.uacURL }}
        - name: RSPY_WORKING_DIR
          value: {{ .Values.app.workDir }}
        #- name: RSPY_STATION_CONFIG
        #  value: {{ .Values.app.confDir }}/{{ .Values.app.stationConfigFile }}
        - name: EODAG_CADIP_CONFIG
          value: {{ .Values.app.confDir }}/{{ .Values.app.eodagConfigFile }}
        {{ if .Values.app.useTokenModule }}
        - name: EODAG_CADIP_CONFIG
          value: {{ .Values.app.confDir }}/{{ .Values.app.eodagConfigFileTokenModule }}
        {{ end }}
        - name: RSPY_CADIP_SEARCH_CONFIG
          value: {{ .Values.app.confDir }}/{{ .Values.app.cadipSearchConfigFile }}
        - name: POSTGRES_PORT
          value: {{ .Values.postgres.port | quote }}
        - name: POSTGRES_DB
          value: {{ .Values.postgres.db }}
        - name: POSTGRES_HOST
          value: {{ .Values.postgres.host }}
        - name: S3_ENDPOINT
          value: {{ .Values.obs.endpoint }}
        - name: S3_REGION
          value: {{ .Values.obs.region }}
        - name: RSPY_USE_MODULE_FOR_STATION_TOKEN
          value: '{{ .Values.app.useTokenModule }}'          
        {{ if .Values.tempo }}
        {{ if .Values.tempo.endpoint }}
        - name: TEMPO_ENDPOINT
          value: {{ .Values.tempo.endpoint }}
        {{ end }}
        {{ end }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: pass
        - name: S3_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-obs
              key: ak
        - name: S3_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-obs
              key: sk
        - name: "OIDC_ENDPOINT"
          valueFrom:
            secretKeyRef:
              key:  oidc_endpoint
              name: {{ .Release.Name }}-auth
        - name: "OIDC_REALM"
          valueFrom:
            secretKeyRef:
              key:  oidc_realm
              name: {{ .Release.Name }}-auth
        - name: "OIDC_CLIENT_ID"
          valueFrom:
            secretKeyRef:
              key:  oidc_client_id
              name: {{ .Release.Name }}-auth
        - name: "OIDC_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key:  oidc_client_secret
              name: {{ .Release.Name }}-auth
        - name: "RSPY_COOKIE_SECRET"
          valueFrom:
            secretKeyRef:
              key:  cookie_secret
              name: {{ .Release.Name }}-auth
        securityContext:
          privileged: false
        {{ if .Values.probe }}
        {{ if .Values.probe.liveness }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probe.liveness.path }}
            port: {{ .Values.probe.liveness.port }}
          initialDelaySeconds: {{ .Values.probe.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probe.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.probe.liveness.timeoutSeconds }}
        {{ end }}
        {{ if .Values.probe.readiness }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probe.readiness.path }}
            port: {{ .Values.probe.readiness.port }}
          initialDelaySeconds: {{ .Values.probe.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probe.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.probe.readiness.timeoutSeconds }}
        {{ end }}
        {{ end }}
      {{ if .Values.image }}
      {{ if .Values.image.imagePullSecrets }}
      imagePullSecrets:
      - name:  {{ .Values.image.imagePullSecrets }}
      {{ end }}
      {{ end }}
      restartPolicy: Always
      securityContext: {}
      volumes:
        - name: workdir
          emptyDir:
            sizeLimit: 10Gi
        - name: service-config-volume
          configMap:
            name: {{ .Release.Name }}-service-config
        - name: search-service-config-volume
          configMap:
            name: {{ .Release.Name }}-search-service-config
  revisionHistoryLimit: 10