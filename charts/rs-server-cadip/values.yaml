# -- Namespace for the deployment
namespace: processing

# -- Number of replicas for the deployment
replicaCount: 1

service:
  # -- Port for the service
  port: 8080

app:
  # -- Port for the application
  port: 8000
  # -- Working directory for the application
  workDir: /app
  # -- Config directory for the application
  confDir: /app/conf
  # -- Station configuration file for the application
  stationConfigFile: stations_cfg.json
  # -- EODAG configuration file for the application
  eodagConfigFile: cadip_ws_config.yaml
  station:
    # -- CADIP station name
    cadip:
      endpoint:
        # -- CADIP station URL
        url:
          file: http://mockup-station-cadip-cadip-svc.processing.svc.cluster.local:8080/Files
          session: http://mockup-station-cadip-cadip-svc.processing.svc.cluster.local:8080/Sessions

        secret:
          # -- Username to authenticate with the CADIP station
          username: test
          # -- Password to authenticate with the CADIP station
          password: test
    # @ignored
    sgs:
      endpoint:
        url: 
          file: http://mockup-station-cadip-sgs-svc.processing.svc.cluster.local:8080/Files
          session: http://mockup-station-cadip-sgs-svc.processing.svc.cluster.local:8080/Sessions

        secret:
          username: test
          password: test
    # @ignored
    mti:
      endpoint:
        url: 
          file: http://mockup-station-cadip-mti-svc.processing.svc.cluster.local:8080/Files
          session: http://mockup-station-cadip-mti-svc.processing.svc.cluster.local:8080/Sessions

        secret:
          username: test
          password: test
  # -- URL of the API Key Manager service
  uacURL: http://apikeymanager.processing.svc.cluster.local:8000/check/api_key

probe:
  liveness:
    # -- Path for the liveness probe
    path: /health
    # -- Port for the liveness probe
    port: 8000
    # -- InitialDelaySeconds for the liveness probe
    initialDelaySeconds: 30
    # -- periodSeconds for the liveness probe
    periodSeconds: 30
    # -- timeoutSeconds for the liveness probe
    timeoutSeconds: 5
  readiness:
    # -- Path for the readiness probe
    path: /health
    # -- Port for the readiness probe
    port: 8000
    # -- InitialDelaySeconds for the readiness probe
    initialDelaySeconds: 30
    # -- periodSeconds for the readiness probe
    periodSeconds: 30
    # -- timeoutSeconds for the readiness probe
    timeoutSeconds: 5

postgres:
  # -- PostgreSQL port
  port: "5432"
  # -- PostgreSQL database name
  db: rspydemo
  # -- PostgreSQL service URL
  host: postgresql-cluster-rw.database.svc.cluster.local
  secret:
    # -- Username to authenticate with the PostgreSQL service
    user: test
    # -- Password to authenticate with the PostgreSQL service
    pass: test

obs:
  # -- URL of the object storage service endpoint
  endpoint: http://minio.minio.svc.cluster.local:9000
  # -- Region of the object storage service
  region: sbg
  secret:
    # -- Access Key to authenticate with the object storage service
    ak: TDr8foJqSygBQ9YFmWDy
    # -- Secret Key to authenticate with the object storage service
    sk: z2RaqjFttnVZRTsLLqmy4PE6PzJOKzPsE47alDBs

image:
  #imagePullSecrets: regcred
  # -- Image registry
  registry: ghcr.io
  # -- Image repository
  repository: rs-python
  # -- Image name
  name: rs-server-cadip
  # -- Image version, can be a tag or a digest
  version: 0.1a8
  # -- Image pull policy
  PullPolicy: IfNotPresent
  #imagePullSecrets: regcred

ingress:
  issuer:
    # -- Ingress Issuer type
    type: cluster-issuer
    # -- Ingress Issuer name
    name: letsencrypt-prod
  # -- Ingress host name
  host: subdomain.example.com
  # -- Ingress path
  path: /cadip

  request:
    # -- Pod memory request
    ram: "256Mi"
    # -- Pod CPU request
    cpu: "100m"
  limit:
    # -- Pod memory limit
    ram: "1000Mi"
    # -- Pod CPU limit
    cpu: "500m"